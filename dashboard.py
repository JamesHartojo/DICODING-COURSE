# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IXbX8xnkhOKea4QnuziqGpfShhYrsnep
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

@st.cache
def load_data():
    # Ganti dengan path ke dataset Anda
    df = pd.read_csv('/content/Air_Quality/PRSA_Data_Changping_20130301-20170228.csv')
    df['datetime'] = pd.to_datetime(df[['year', 'month', 'day', 'hour']])
    df.set_index('datetime', inplace=True)
    return df

# Load data
df = load_data()

# Sidebar untuk memilih polutan
st.sidebar.title("Filter Polutan")
selected_pollutant = st.sidebar.selectbox(
    "Pilih Polutan", ["PM2.5", "PM10", "SO2", "NO2", "CO", "O3"])

# Title
st.title('Analisis Kualitas Udara di Changping, China')

# Menampilkan informasi dasar tentang dataset
st.subheader('Informasi Dasar Dataset')
st.write(df.describe())

#Menampilkan Tabel Korelasi
pollutants = ['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3']
correlation_matrix = df[pollutants].corr()
st.title('Korelasi Antar Polutan')
fig, ax = plt.subplots(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', ax=ax)
plt.title('Korelasi Antar Polutan')
st.pyplot(fig)

# Plot distribusi polutan yang dipilih
st.subheader(f'Distribusi {selected_pollutant}')
fig, ax = plt.subplots(figsize=(10, 6))
sns.histplot(df[selected_pollutant], bins=30, kde=True, ax=ax)
ax.set_title(f'Distribusi {selected_pollutant}')
ax.set_xlabel('Konsentrasi (µg/m³)')
ax.set_ylabel('Frekuensi')
st.pyplot(fig)

# Plot tren tahunan dan musiman dari polutan yang dipilih
st.subheader(f'Tren Tahunan {selected_pollutant}')
fig, ax = plt.subplots(figsize=(14, 7))
df[selected_pollutant].resample('M').mean().plot(label=selected_pollutant, ax=ax)
ax.set_title(f'Tren Tahunan {selected_pollutant}')
ax.set_xlabel('Tanggal')
ax.set_ylabel('Konsentrasi')
ax.legend()
st.pyplot(fig)

# Plot hubungan antara polutan yang dipilih dan suhu
st.subheader(f'Hubungan {selected_pollutant} dengan Suhu')
fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(data=df, x='TEMP', y=selected_pollutant, ax=ax)
ax.set_title(f'Hubungan {selected_pollutant} dengan Suhu')
ax.set_xlabel('Suhu (°C)')
ax.set_ylabel(f'{selected_pollutant} (µg/m³)')
st.pyplot(fig)

# Plot hubungan antara arah dan kecepatan angin terhadap polutan yang dipilih
st.subheader(f'Hubungan Arah dan Kecepatan Angin dengan {selected_pollutant}')
fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(data=df, x='WSPM', y=selected_pollutant, hue='wd', ax=ax)
ax.set_title(f'Hubungan Arah dan Kecepatan Angin dengan {selected_pollutant}')
ax.set_xlabel('Kecepatan Angin (m/s)')
ax.set_ylabel(f'{selected_pollutant} (µg/m³)')
st.pyplot(fig)

#Hubungan dengan weekdays dan weekend
df['day_of_week'] = df.index.dayofweek
df['is_weekend'] = df['day_of_week'].apply(lambda x: 'Weekend' if x >= 5 else 'Weekday')

weekend_weekday_avg = df.groupby('is_weekend')[selected_pollutant].mean().reset_index()

st.title(f'Rata-rata {selected_pollutant}: Weekday vs. Weekend')
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(ax=ax, data=weekend_weekday_avg, x='is_weekend', y=selected_pollutant, hue='is_weekend', palette='viridis', dodge=False, legend=False)
plt.title(f'Rata-rata {selected_pollutant} pada Weekday dan Weekend')
plt.xlabel('Hari')
plt.ylabel(f'Rata-rata {selected_pollutant} (µg/m³)')
st.pyplot(fig)